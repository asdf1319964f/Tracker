name: Tracker服务器合并

on:
  schedule:
    - cron: '0 0 * * *'  # UTC 时间 0 点对应北京时间 8 点
  workflow_dispatch:  # 手动触发工作流

env:
  TZ: Asia/Shanghai  # 设置时区为北京时间

jobs:
  run-tracker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 拉取完整历史记录，确保可以处理远程冲突

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'  # 使用最新的 Python 3 版本

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run Tracker.py
      run: python Tracker.py > all.txt  # 将输出写入 all.txt

    - name: Commit and push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
        # 添加文件并提交
        git add all.txt
        git commit -m "Update Tracker output at $(date +"%Y-%m-%d %H:%M:%S")" || echo "No changes to commit"

        # 拉取远程更改以避免冲突
        git pull --rebase origin main || echo "Rebase failed, trying to continue"

        # 推送更改
        git push origin main
